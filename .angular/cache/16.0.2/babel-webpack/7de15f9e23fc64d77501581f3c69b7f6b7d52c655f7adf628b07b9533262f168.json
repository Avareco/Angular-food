{"ast":null,"code":"import { createEffect, ofType } from \"@ngrx/effects\";\nimport { decrement, increment, init, set } from \"./counter.action\";\nimport { of, switchMap, tap, withLatestFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@ngrx/store\";\nclass CounterEffects {\n  constructor(actions$, store) {\n    this.actions$ = actions$;\n    this.store = store;\n    this.loadCount = createEffect(() => this.actions$.pipe(ofType(init), switchMap(() => {\n      const storedCounter = localStorage.getItem(\"counter\");\n      if (!storedCounter) {\n        return of(set({\n          value: 0\n        }));\n      }\n      return of(set({\n        value: +storedCounter\n      }));\n    })));\n    this.saveCount = createEffect(() => this.actions$.pipe(ofType(increment, decrement), withLatestFrom(this.store.select(\"counterReducer\")), tap(([action, store]) => {\n      console.log(store);\n      localStorage.setItem(\"counter\", store.toString());\n    })), {\n      dispatch: false\n    });\n  }\n}\nCounterEffects.ɵfac = function CounterEffects_Factory(t) {\n  return new (t || CounterEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Store));\n};\nCounterEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CounterEffects,\n  factory: CounterEffects.ɵfac\n});\nexport { CounterEffects };","map":{"version":3,"names":["createEffect","ofType","decrement","increment","init","set","of","switchMap","tap","withLatestFrom","CounterEffects","constructor","actions$","store","loadCount","pipe","storedCounter","localStorage","getItem","value","saveCount","select","action","console","log","setItem","toString","dispatch","i0","ɵɵinject","i1","Actions","i2","Store","factory","ɵfac"],"sources":["C:\\Users\\andrii.yakovliev\\Desktop\\projects\\2024\\udemy\\ANGULAR_COURSE\\01-starting-setup-standalone\\src\\app\\store\\counter\\counter.effects.ts"],"sourcesContent":["import {Actions, createEffect, ofType} from \"@ngrx/effects\";\r\nimport {decrement, increment, init, set} from \"./counter.action\";\r\nimport {of, switchMap, tap, withLatestFrom} from \"rxjs\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Store} from \"@ngrx/store\";\r\n\r\n@Injectable()\r\nexport class CounterEffects {\r\n  loadCount = createEffect(() => this.actions$.pipe(\r\n      ofType(init),\r\n      switchMap(() => {\r\n        const storedCounter = localStorage.getItem(\"counter\")\r\n        if (!storedCounter) {\r\n          return of(set({value: 0}))\r\n        }\r\n        return of(set({value: +storedCounter}))\r\n      })\r\n    )\r\n  )\r\n\r\n\r\n  saveCount = createEffect(() => this.actions$.pipe(\r\n    ofType(increment, decrement),\r\n    withLatestFrom(this.store.select(\"counterReducer\")),\r\n    tap(([action, store]) => {\r\n      console.log(store)\r\n      localStorage.setItem(\"counter\", store.toString())\r\n    })\r\n  ), {dispatch: false})\r\n\r\n  constructor(private actions$: Actions, private store: Store<{ counterReducer: number }>) {\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAiBA,YAAY,EAAEC,MAAM,QAAO,eAAe;AAC3D,SAAQC,SAAS,EAAEC,SAAS,EAAEC,IAAI,EAAEC,GAAG,QAAO,kBAAkB;AAChE,SAAQC,EAAE,EAAEC,SAAS,EAAEC,GAAG,EAAEC,cAAc,QAAO,MAAM;;;;AAIvD,MACaC,cAAc;EAuBzBC,YAAoBC,QAAiB,EAAUC,KAAwC;IAAnE,KAAAD,QAAQ,GAARA,QAAQ;IAAmB,KAAAC,KAAK,GAALA,KAAK;IAtBpD,KAAAC,SAAS,GAAGd,YAAY,CAAC,MAAM,IAAI,CAACY,QAAQ,CAACG,IAAI,CAC7Cd,MAAM,CAACG,IAAI,CAAC,EACZG,SAAS,CAAC,MAAK;MACb,MAAMS,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MACrD,IAAI,CAACF,aAAa,EAAE;QAClB,OAAOV,EAAE,CAACD,GAAG,CAAC;UAACc,KAAK,EAAE;QAAC,CAAC,CAAC,CAAC;;MAE5B,OAAOb,EAAE,CAACD,GAAG,CAAC;QAACc,KAAK,EAAE,CAACH;MAAa,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CACH,CACF;IAGD,KAAAI,SAAS,GAAGpB,YAAY,CAAC,MAAM,IAAI,CAACY,QAAQ,CAACG,IAAI,CAC/Cd,MAAM,CAACE,SAAS,EAAED,SAAS,CAAC,EAC5BO,cAAc,CAAC,IAAI,CAACI,KAAK,CAACQ,MAAM,CAAC,gBAAgB,CAAC,CAAC,EACnDb,GAAG,CAAC,CAAC,CAACc,MAAM,EAAET,KAAK,CAAC,KAAI;MACtBU,OAAO,CAACC,GAAG,CAACX,KAAK,CAAC;MAClBI,YAAY,CAACQ,OAAO,CAAC,SAAS,EAAEZ,KAAK,CAACa,QAAQ,EAAE,CAAC;IACnD,CAAC,CAAC,CACH,EAAE;MAACC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAGrB;;AAxBWjB,cAAc,C;mBAAdA,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,KAAA;AAAA;AAAdvB,cAAc,C;SAAdA,cAAc;EAAAwB,OAAA,EAAdxB,cAAc,CAAAyB;AAAA;SAAdzB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}