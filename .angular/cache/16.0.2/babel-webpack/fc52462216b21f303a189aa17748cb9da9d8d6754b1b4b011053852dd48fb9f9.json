{"ast":null,"code":"import { createEffect, ofType } from \"@ngrx/effects\";\nimport { tap, withLatestFrom } from \"rxjs\";\nimport { updateCart } from \"./cart.actions\";\nimport { selectCartData } from \"./meals.selectors\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"./cart.service\";\nclass CartEffects {\n  constructor(actions$, store, cartService) {\n    this.actions$ = actions$;\n    this.store = store;\n    this.cartService = cartService;\n    this.saveCart = createEffect(() => this.actions$.pipe(ofType(updateCart), withLatestFrom(this.store.select(selectCartData)), tap(([action, store]) => {\n      console.log(store);\n      this.cartService.updateCart(store);\n    })), {\n      dispatch: false\n    });\n  }\n}\nCartEffects.ɵfac = function CartEffects_Factory(t) {\n  return new (t || CartEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Store), i0.ɵɵinject(i3.CartService));\n};\nCartEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartEffects,\n  factory: CartEffects.ɵfac\n});\nexport { CartEffects };","map":{"version":3,"names":["createEffect","ofType","tap","withLatestFrom","updateCart","selectCartData","CartEffects","constructor","actions$","store","cartService","saveCart","pipe","select","action","console","log","dispatch","i0","ɵɵinject","i1","Actions","i2","Store","i3","CartService","factory","ɵfac"],"sources":["C:\\Users\\andrii.yakovliev\\Desktop\\projects\\2024\\udemy\\ANGULAR_COURSE\\01-starting-setup-standalone\\src\\app\\store\\cart\\cart.effects.ts"],"sourcesContent":["import {Actions, createEffect, ofType} from \"@ngrx/effects\";\r\nimport {tap, withLatestFrom} from \"rxjs\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Store} from \"@ngrx/store\";\r\nimport {updateCart} from \"./cart.actions\";\r\nimport {selectCartData} from \"./meals.selectors\";\r\nimport {ICartStore} from \"./cart.reducer\";\r\nimport {CartService} from \"./cart.service\";\r\n\r\n@Injectable()\r\nexport class CartEffects {\r\n\r\n\r\n  saveCart = createEffect(() => this.actions$.pipe(\r\n    ofType(updateCart),\r\n    withLatestFrom(this.store.select(selectCartData)),\r\n    tap(([action, store]) => {\r\n      console.log(store)\r\n      this.cartService.updateCart(store)\r\n    })\r\n  ), {dispatch: false})\r\n\r\n  constructor(private actions$: Actions,\r\n              private store: Store<{\r\n                cartReducer: ICartStore\r\n              }>,\r\n              private cartService: CartService) {\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAiBA,YAAY,EAAEC,MAAM,QAAO,eAAe;AAC3D,SAAQC,GAAG,EAAEC,cAAc,QAAO,MAAM;AAGxC,SAAQC,UAAU,QAAO,gBAAgB;AACzC,SAAQC,cAAc,QAAO,mBAAmB;;;;;AAIhD,MACaC,WAAW;EAYtBC,YAAoBC,QAAiB,EACjBC,KAEN,EACMC,WAAwB;IAJxB,KAAAF,QAAQ,GAARA,QAAQ;IACR,KAAAC,KAAK,GAALA,KAAK;IAGL,KAAAC,WAAW,GAAXA,WAAW;IAb/B,KAAAC,QAAQ,GAAGX,YAAY,CAAC,MAAM,IAAI,CAACQ,QAAQ,CAACI,IAAI,CAC9CX,MAAM,CAACG,UAAU,CAAC,EAClBD,cAAc,CAAC,IAAI,CAACM,KAAK,CAACI,MAAM,CAACR,cAAc,CAAC,CAAC,EACjDH,GAAG,CAAC,CAAC,CAACY,MAAM,EAAEL,KAAK,CAAC,KAAI;MACtBM,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;MAClB,IAAI,CAACC,WAAW,CAACN,UAAU,CAACK,KAAK,CAAC;IACpC,CAAC,CAAC,CACH,EAAE;MAACQ,QAAQ,EAAE;IAAK,CAAC,CAAC;EAOrB;;AAjBWX,WAAW,C;mBAAXA,WAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,KAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,WAAA;AAAA;AAAXnB,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB;AAAA;SAAXrB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}